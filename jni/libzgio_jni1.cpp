/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <cutils/log.h>
#include <cutils/properties.h>
#include <stdint.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>
#include <fcntl.h>
#include <pthread.h>
#include <termios.h>
#include <sys/ioctl.h>
#include <sys/types.h>
#include <sys/select.h>

#define	ZGIO_IOCTL_FILE		"/dev/zg_io_drv"
#define ZGIO_LOG_ON
#ifdef	ZGIO_LOG_ON
#define	LOG_TAG "hcj.light"
#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG , LOG_TAG, __VA_ARGS__)
#else
#define LOGD(...)
#endif

#define	GPIO_IOC_MAGIC		'X'
/*
#define	GPIO_IOC_1_ON		_IOW(GPIO_IOC_MAGIC, 0, int)
#define	GPIO_IOC_1_OFF		_IOW(GPIO_IOC_MAGIC, 1, int)
#define	GPIO_IOC_2_ON		_IOW(GPIO_IOC_MAGIC, 2, int)
#define	GPIO_IOC_2_OFF		_IOW(GPIO_IOC_MAGIC, 3, int)
#define	GPIO_IOC_3_ON		_IOW(GPIO_IOC_MAGIC, 4, int)
#define	GPIO_IOC_3_OFF		_IOW(GPIO_IOC_MAGIC, 5, int)
#define	GPIO_IOC_4_ON		_IOW(GPIO_IOC_MAGIC, 6, int)
#define	GPIO_IOC_4_OFF		_IOW(GPIO_IOC_MAGIC, 7, int)
#define	GPIO_IOC_5_ON		_IOW(GPIO_IOC_MAGIC, 8, int)
#define	GPIO_IOC_5_OFF		_IOW(GPIO_IOC_MAGIC, 9, int)
#define	GPIO_IOC_6_ON		_IOW(GPIO_IOC_MAGIC, 10, int)
#define	GPIO_IOC_6_OFF		_IOW(GPIO_IOC_MAGIC, 11, int)
#define	GPIO_IOC_7_ON		_IOW(GPIO_IOC_MAGIC, 12, int)
#define	GPIO_IOC_7_OFF		_IOW(GPIO_IOC_MAGIC, 13, int)
#define	GPIO_IOC_8_ON		_IOW(GPIO_IOC_MAGIC, 14, int)
#define	GPIO_IOC_8_OFF		_IOW(GPIO_IOC_MAGIC, 15, int)
#define	GPIO_IOC_9_ON		_IOW(GPIO_IOC_MAGIC, 16, int)
#define	GPIO_IOC_9_OFF		_IOW(GPIO_IOC_MAGIC, 17, int)
*/
#define	GPIO_IOC_MODE	 _IOW(GPIO_IOC_MAGIC, 18, int)

extern "C" {
	/*
	 * Class:     com_yl_evdoio
	 * Method:    ioswitch
	 * Signature: (Ljava/lang/String;Ljava/lang/String;)I
	 */
	JNIEXPORT jint JNICALL Java_com_zg_IO1_mode(JNIEnv * env, jobject jobj, jint mode);
};

JNIEXPORT jint JNICALL Java_com_zg_IO1_mode(JNIEnv * env, jobject jobj, jint mode)
{
int fd = -1;

fd = open(ZGIO_IOCTL_FILE, O_WRONLY);
if(fd < 0)
{
LOGD("failed to open ZGIO_IOCTL_FILE!, fd = %d\n", fd);
return fd;
}	  
LOGD("Java_com_zg_IO_mode, mode = %d\n", mode);

if(ioctl(fd, GPIO_IOC_MODE, mode) < 0)	
{
LOGD("set switch ZGIO_IOCTL_FILE failed!\n");
}

close(fd);

return fd;
}

extern "C" jint JNI_OnLoad(JavaVM* vm, void* reserved) {
	JNIEnv* env = NULL;
	jint result = -1;
	if (vm->GetEnv((void**) &env, JNI_VERSION_1_4) != JNI_OK) {
		return result;
	}

	return JNI_VERSION_1_4;
}

